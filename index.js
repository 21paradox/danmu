// Generated by CoffeeScript 1.9.2
(function() {
  var colors, danmu, data, fonts, index, k;

  colors = ["#fc4267", "#ff6600", "#cc916a", "#ffde58", "#77c261", "#f14700", "#ffffff"];

  fonts = [16, 22, 26];

  danmu = function(data, config, render) {
    var animationRequest, appenDom, applyScene, curIndex, getsubArr, outNode, rows, run, width;
    rows = 4;
    width = '480px';
    outNode = document.getElementById('marquee');
    if (render == null) {
      render = function(data) {
        var i, index, item, k, l, len, ref, template;
        template = "<div class='damu-wrap' style='width: 0px; position: absolute; overflow: hidden; padding-left: " + width + "; margin-bottom: 20px;'>";
        for (i = k = 0, ref = rows; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
          template += "<div class='danmu-row' style='white-space: nowrap; float: left; padding-right: " + width + "; line-height: 28px;'>";
          for (index = l = 0, len = data.length; l < len; index = ++l) {
            item = data[index];
            if (index % rows === i) {
              template += "<span style='margin-right: 20px;'>" + item + "</span>";
            }
          }
          template += "</div>";
        }
        template += "</div>";
        return template;
      };
    }
    appenDom = function(outNode, data) {
      var damuNode, damuNode1;
      damuNode = document.createElement('div');
      damuNode.innerHTML = render(data);
      damuNode1 = damuNode.firstChild;
      outNode.appendChild(damuNode1);
      return damuNode1;
    };
    curIndex = 0;
    getsubArr = function() {
      var j, k, subarr;
      subarr = [data[curIndex]];
      for (j = k = 1; k < 20; j = ++k) {
        subarr.push(data[(curIndex + j) % data.length]);
      }
      curIndex = (curIndex + j) % data.length + 1;
      return subarr;
    };
    animationRequest = null;
    run = function(danmuNode) {
      var animateLoop, newScene, offsetWidth, scrollWidth;
      offsetWidth = danmuNode.offsetWidth;
      scrollWidth = danmuNode.scrollWidth;
      newScene = false;
      animateLoop = function() {
        if (danmuNode.scrollLeft + 2 * offsetWidth >= danmuNode.scrollWidth && !newScene) {
          applyScene();
          newScene = true;
        }
        if (danmuNode.scrollLeft + offsetWidth >= danmuNode.scrollWidth) {
          danmuNode.parentNode.removeChild(danmuNode);
        } else {
          danmuNode.scrollLeft += 1;
          return animationRequest = requestAnimationFrame(animateLoop);
        }
      };
      return animateLoop();
    };
    applyScene = function() {
      var d, danmuNode;
      d = getsubArr();
      danmuNode = appenDom(outNode, d);
      return run(danmuNode);
    };
    applyScene();
    document.getElementById('test123').onclick = function() {
      return cancelAnimationFrame(animationRequest);
    };
    return document.getElementById('test1234').onclick = function() {
      return cancelAnimationFrame(animationRequest);
    };
  };

  data = [];

  for (index = k = 0; k < 20; index = ++k) {
    if (index === 0) {
      data.push('start name');
    } else {
      data.push(Random.chineseName(10));
    }
  }

  console.log(data);

  danmu(data, {});

}).call(this);
